generator client {
    provider = "prisma-client-js"
    previewFeatures = ["referentialIntegrity"]
}

datasource db {
    provider = "mysql"
    url = "mysql://"
    relationMode = "foreignKeys"
}

model A {
    id Int @id
    bs B[]
}

model B {
    id Int   @id
    aId Int? @default(3)
    a   A?   @relation(fields: [aId], references: [id], onUpdate: SetDefault, onDelete: SetDefault)
}
// [1;91merror[0m: [1mError validating: Invalid referential action: `SetDefault`. Allowed values: (`Cascade`, `Restrict`, `NoAction`, `SetNull`). `SetDefault` is invalid for MySQL when using `relationMode = \"foreignKeys\"`, as MySQL does not support the `SET DEFAULT` referential action.
// Learn more at https://github.com/prisma/prisma/issues/11498
// [0m
//   [1;94m-->[0m  [4mschema.prisma:20[0m
// [1;94m   | [0m
// [1;94m19 | [0m    aId Int? @default(3)
// [1;94m20 | [0m    a   A?   @relation(fields: [aId], references: [id], onUpdate: SetDefault, [1;91monDelete: SetDefault[0m)
// [1;94m   | [0m
// [1;91merror[0m: [1mError validating: Invalid referential action: `SetDefault`. Allowed values: (`Cascade`, `Restrict`, `NoAction`, `SetNull`). `SetDefault` is invalid for MySQL when using `relationMode = \"foreignKeys\"`, as MySQL does not support the `SET DEFAULT` referential action.
// Learn more at https://github.com/prisma/prisma/issues/11498
// [0m
//   [1;94m-->[0m  [4mschema.prisma:20[0m
// [1;94m   | [0m
// [1;94m19 | [0m    aId Int? @default(3)
// [1;94m20 | [0m    a   A?   @relation(fields: [aId], references: [id], [1;91monUpdate: SetDefault[0m, onDelete: SetDefault)
// [1;94m   | [0m
